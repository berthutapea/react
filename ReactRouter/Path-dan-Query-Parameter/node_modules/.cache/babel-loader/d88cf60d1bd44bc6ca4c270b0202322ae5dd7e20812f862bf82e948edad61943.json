{"ast":null,"code":"import _slicedToArray from \"F:/react/ReactRouter/Path-dan-Query-Parameter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\n * React Router v6.3.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { parsePath, createMemoryHistory, Action } from 'history';\nexport { Action as NavigationType, createPath, parsePath } from 'history';\nimport { createContext, useContext, useMemo, useRef, useEffect, useCallback, createElement, useState, useLayoutEffect, Children, isValidElement, Fragment } from 'react';\nvar NavigationContext = /*#__PURE__*/createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nvar LocationContext = /*#__PURE__*/createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nvar RouteContext = /*#__PURE__*/createContext({\n  outlet: null,\n  matches: []\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nfunction invariant(cond, message) {\n  if (!cond) throw new Error(message);\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nvar alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? warning(false, message) : void 0;\n  }\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/docs/en/v6/api#generatepath\n */\nfunction generatePath(path, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  return path.replace(/:(\\w+)/g, function (_, key) {\n    !(params[key] != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Missing \\\":\" + key + \"\\\" param\") : invariant(false) : void 0;\n    return params[key];\n  }).replace(/\\/*\\*$/, function (_) {\n    return params[\"*\"] == null ? \"\" : params[\"*\"].replace(/^\\/*/, \"/\");\n  });\n}\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchroutes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  var location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  var pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  var branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  var matches = null;\n  for (var i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], pathname);\n  }\n  return matches;\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  routes.forEach(function (route, index) {\n    var meta = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route: route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      !meta.relativePath.startsWith(parentPath) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\") : invariant(false) : void 0;\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    var path = joinPaths([parentPath, meta.relativePath]);\n    var routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n\n    if (route.children && route.children.length > 0) {\n      !(route.index !== true) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\")) : invariant(false) : void 0;\n      flattenRoutes(route.children, branches, routesMeta, path);\n    } // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path: path,\n      score: computeScore(path, route.index),\n      routesMeta: routesMeta\n    });\n  });\n  return branches;\n}\nfunction rankRouteBranches(branches) {\n  branches.sort(function (a, b) {\n    return a.score !== b.score ? b.score - a.score // Higher score first\n    : compareIndexes(a.routesMeta.map(function (meta) {\n      return meta.childrenIndex;\n    }), b.routesMeta.map(function (meta) {\n      return meta.childrenIndex;\n    }));\n  });\n}\nvar paramRe = /^:\\w+$/;\nvar dynamicSegmentValue = 3;\nvar indexRouteValue = 2;\nvar emptySegmentValue = 1;\nvar staticSegmentValue = 10;\nvar splatPenalty = -2;\nvar isSplat = function isSplat(s) {\n  return s === \"*\";\n};\nfunction computeScore(path, index) {\n  var segments = path.split(\"/\");\n  var initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(function (s) {\n    return !isSplat(s);\n  }).reduce(function (score, segment) {\n    return score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue);\n  }, initialScore);\n}\nfunction compareIndexes(a, b) {\n  var siblings = a.length === b.length && a.slice(0, -1).every(function (n, i) {\n    return n === b[i];\n  });\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname) {\n  var routesMeta = branch.routesMeta;\n  var matchedParams = {};\n  var matchedPathname = \"/\";\n  var matches = [];\n  for (var i = 0; i < routesMeta.length; ++i) {\n    var meta = routesMeta[i];\n    var end = i === routesMeta.length - 1;\n    var remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    var match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end: end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    var route = meta.route;\n    matches.push({\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route: route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchpath\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  var _compilePath = compilePath(pattern.path, pattern.caseSensitive, pattern.end),\n    _compilePath2 = _slicedToArray(_compilePath, 2),\n    matcher = _compilePath2[0],\n    paramNames = _compilePath2[1];\n  var match = pathname.match(matcher);\n  if (!match) return null;\n  var matchedPathname = match[0];\n  var pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  var captureGroups = match.slice(1);\n  var params = paramNames.reduce(function (memo, paramName, index) {\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      var splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || \"\", paramName);\n    return memo;\n  }, {});\n  return {\n    params: params,\n    pathname: matchedPathname,\n    pathnameBase: pathnameBase,\n    pattern: pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\")) : void 0;\n  var paramNames = [];\n  var regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/:(\\w+)/g, function (_, paramName) {\n    paramNames.push(paramName);\n    return \"([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else {\n    regexpSource += end ? \"\\\\/*$\" // When matching to the end, ignore trailing slashes\n    :\n    // Otherwise, match a word boundary or a proceeding /. The word boundary restricts\n    // parent routes to matching only their own words and nothing more, e.g. parent\n    // route \"/home\" should not match \"/home2\".\n    // Additionally, allow paths starting with `.`, `-`, `~`, and url-encoded entities,\n    // but do not consume the character in the matched path so they can match against\n    // nested paths.\n    \"(?:(?=[.~-]|%[0-9A-F]{2})|\\\\b|\\\\/|$)\";\n  }\n  var matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, paramNames];\n}\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\")) : void 0;\n    return value;\n  }\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/docs/en/v6/api#resolvepath\n */\n\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  var _ref5 = typeof to === \"string\" ? parsePath(to) : to,\n    toPathname = _ref5.pathname,\n    _ref5$search = _ref5.search,\n    search = _ref5$search === void 0 ? \"\" : _ref5$search,\n    _ref5$hash = _ref5.hash,\n    hash = _ref5$hash === void 0 ? \"\" : _ref5$hash;\n  var pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname: pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  var segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  var relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(function (segment) {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction resolveTo(toArg, routePathnames, locationPathname) {\n  var to = typeof toArg === \"string\" ? parsePath(toArg) : toArg;\n  var toPathname = toArg === \"\" || to.pathname === \"\" ? \"/\" : to.pathname; // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n\n  var from;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    var routePathnameIndex = routePathnames.length - 1;\n    if (toPathname.startsWith(\"..\")) {\n      var toSegments = toPathname.split(\"/\"); // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    } // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  var path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original to value had one.\n\n  if (toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\") && !path.pathname.endsWith(\"/\")) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  var nextChar = pathname.charAt(basename.length);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(basename.length) || \"/\";\n}\nvar joinPaths = function joinPaths(paths) {\n  return paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n};\nvar normalizePathname = function normalizePathname(pathname) {\n  return pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n};\nvar normalizeSearch = function normalizeSearch(search) {\n  return !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n};\nvar normalizeHash = function normalizeHash(hash) {\n  return !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n};\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usehref\n */\n\nfunction useHref(to) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  var _useContext = useContext(NavigationContext),\n    basename = _useContext.basename,\n    navigator = _useContext.navigator;\n  var _useResolvedPath = useResolvedPath(to),\n    hash = _useResolvedPath.hash,\n    pathname = _useResolvedPath.pathname,\n    search = _useResolvedPath.search;\n  var joinedPathname = pathname;\n  if (basename !== \"/\") {\n    var toPathname = getToPathname(to);\n    var endsWithSlash = toPathname != null && toPathname.endsWith(\"/\");\n    joinedPathname = pathname === \"/\" ? basename + (endsWithSlash ? \"/\" : \"\") : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search: search,\n    hash: hash\n  });\n}\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext\n */\n\nfunction useInRouterContext() {\n  return useContext(LocationContext) != null;\n}\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/api#uselocation\n */\n\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  return useContext(LocationContext).location;\n}\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigationtype\n */\n\nfunction useNavigationType() {\n  return useContext(LocationContext).navigationType;\n}\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usematch\n */\n\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  var _useLocation = useLocation(),\n    pathname = _useLocation.pathname;\n  return useMemo(function () {\n    return matchPath(pattern, pathname);\n  }, [pathname, pattern]);\n}\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigate\n */\nfunction useNavigate() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  var _useContext2 = useContext(NavigationContext),\n    basename = _useContext2.basename,\n    navigator = _useContext2.navigator;\n  var _useContext3 = useContext(RouteContext),\n    matches = _useContext3.matches;\n  var _useLocation2 = useLocation(),\n    locationPathname = _useLocation2.pathname;\n  var routePathnamesJson = JSON.stringify(matches.map(function (match) {\n    return match.pathnameBase;\n  }));\n  var activeRef = useRef(false);\n  useEffect(function () {\n    activeRef.current = true;\n  });\n  var navigate = useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? warning(activeRef.current, \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\") : void 0;\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    var path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname);\n    if (basename !== \"/\") {\n      path.pathname = joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state);\n  }, [basename, navigator, routePathnamesJson, locationPathname]);\n  return navigate;\n}\nvar OutletContext = /*#__PURE__*/createContext(null);\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/docs/en/v6/api#useoutletcontext\n */\n\nfunction useOutletContext() {\n  return useContext(OutletContext);\n}\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useoutlet\n */\n\nfunction useOutlet(context) {\n  var outlet = useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useparams\n */\n\nfunction useParams() {\n  var _useContext4 = useContext(RouteContext),\n    matches = _useContext4.matches;\n  var routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath\n */\n\nfunction useResolvedPath(to) {\n  var _useContext5 = useContext(RouteContext),\n    matches = _useContext5.matches;\n  var _useLocation3 = useLocation(),\n    locationPathname = _useLocation3.pathname;\n  var routePathnamesJson = JSON.stringify(matches.map(function (match) {\n    return match.pathnameBase;\n  }));\n  return useMemo(function () {\n    return resolveTo(to, JSON.parse(routePathnamesJson), locationPathname);\n  }, [to, routePathnamesJson, locationPathname]);\n}\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useroutes\n */\n\nfunction useRoutes(routes, locationArg) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  var _useContext6 = useContext(RouteContext),\n    parentMatches = _useContext6.matches;\n  var routeMatch = parentMatches[parentMatches.length - 1];\n  var parentParams = routeMatch ? routeMatch.params : {};\n  var parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  var parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  var parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    var parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  var locationFromContext = useLocation();\n  var location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    var parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  var pathname = location.pathname || \"/\";\n  var remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  var matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(matches == null || matches[matches.length - 1].route.element !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" does not have an element. \" + \"This means it will render an <Outlet /> with a null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  return _renderMatches(matches && matches.map(function (match) {\n    return Object.assign({}, match, {\n      params: Object.assign({}, parentParams, match.params),\n      pathname: joinPaths([parentPathnameBase, match.pathname]),\n      pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase, match.pathnameBase])\n    });\n  }), parentMatches);\n}\nfunction _renderMatches(matches, parentMatches) {\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (matches == null) return null;\n  return matches.reduceRight(function (outlet, match, index) {\n    return /*#__PURE__*/createElement(RouteContext.Provider, {\n      children: match.route.element !== undefined ? match.route.element : outlet,\n      value: {\n        outlet: outlet,\n        matches: parentMatches.concat(matches.slice(0, index + 1))\n      }\n    });\n  }, null);\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/api#memoryrouter\n */\nfunction MemoryRouter(_ref) {\n  var basename = _ref.basename,\n    children = _ref.children,\n    initialEntries = _ref.initialEntries,\n    initialIndex = _ref.initialIndex;\n  var historyRef = useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries: initialEntries,\n      initialIndex: initialIndex\n    });\n  }\n  var history = historyRef.current;\n  var _useState = useState({\n      action: history.action,\n      location: history.location\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history]);\n  return /*#__PURE__*/createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/api#navigate\n */\nfunction Navigate(_ref2) {\n  var to = _ref2.to,\n    replace = _ref2.replace,\n    state = _ref2.state;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  var navigate = useNavigate();\n  useEffect(function () {\n    navigate(to, {\n      replace: replace,\n      state: state\n    });\n  });\n  return null;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/api#outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : invariant(false);\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/api#router\n */\nfunction Router(_ref3) {\n  var _ref3$basename = _ref3.basename,\n    basenameProp = _ref3$basename === void 0 ? \"/\" : _ref3$basename,\n    _ref3$children = _ref3.children,\n    children = _ref3$children === void 0 ? null : _ref3$children,\n    locationProp = _ref3.location,\n    _ref3$navigationType = _ref3.navigationType,\n    navigationType = _ref3$navigationType === void 0 ? Action.Pop : _ref3$navigationType,\n    navigator = _ref3.navigator,\n    _ref3$static = _ref3.static,\n    staticProp = _ref3$static === void 0 ? false : _ref3$static;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : invariant(false) : void 0;\n  var basename = normalizePathname(basenameProp);\n  var navigationContext = useMemo(function () {\n    return {\n      basename: basename,\n      navigator: navigator,\n      static: staticProp\n    };\n  }, [basename, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  var _locationProp = locationProp,\n    _locationProp$pathnam = _locationProp.pathname,\n    pathname = _locationProp$pathnam === void 0 ? \"/\" : _locationProp$pathnam,\n    _locationProp$search = _locationProp.search,\n    search = _locationProp$search === void 0 ? \"\" : _locationProp$search,\n    _locationProp$hash = _locationProp.hash,\n    hash = _locationProp$hash === void 0 ? \"\" : _locationProp$hash,\n    _locationProp$state = _locationProp.state,\n    state = _locationProp$state === void 0 ? null : _locationProp$state,\n    _locationProp$key = _locationProp.key,\n    key = _locationProp$key === void 0 ? \"default\" : _locationProp$key;\n  var location = useMemo(function () {\n    var trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      pathname: trailingPathname,\n      search: search,\n      hash: hash,\n      state: state,\n      key: key\n    };\n  }, [basename, pathname, search, hash, state, key]);\n  process.env.NODE_ENV !== \"production\" ? warning(location != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (location == null) {\n    return null;\n  }\n  return /*#__PURE__*/createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/createElement(LocationContext.Provider, {\n    children: children,\n    value: {\n      location: location,\n      navigationType: navigationType\n    }\n  }));\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#routes\n */\nfunction Routes(_ref4) {\n  var children = _ref4.children,\n    location = _ref4.location;\n  return useRoutes(createRoutesFromChildren(children), location);\n} ///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren\n */\n\nfunction createRoutesFromChildren(children) {\n  var routes = [];\n  Children.forEach(children, function (element) {\n    if (! /*#__PURE__*/isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    if (element.type === Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : invariant(false) : void 0;\n    var route = {\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\n\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\nexport { MemoryRouter, Navigate, Outlet, Route, Router, Routes, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, createRoutesFromChildren, generatePath, matchPath, matchRoutes, renderMatches, resolvePath, useHref, useInRouterContext, useLocation, useMatch, useNavigate, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRoutes };","map":{"version":3,"names":["NavigationContext","createContext","process","env","NODE_ENV","displayName","LocationContext","RouteContext","outlet","matches","invariant","cond","message","Error","warning","console","warn","e","alreadyWarned","warningOnce","key","generatePath","path","params","replace","_","matchRoutes","routes","locationArg","basename","location","parsePath","pathname","stripBasename","branches","flattenRoutes","rankRouteBranches","i","length","matchRouteBranch","parentsMeta","parentPath","forEach","route","index","meta","relativePath","caseSensitive","childrenIndex","startsWith","slice","joinPaths","routesMeta","concat","children","push","score","computeScore","sort","a","b","compareIndexes","map","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","segments","split","initialScore","some","filter","reduce","segment","test","siblings","every","n","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","Object","assign","pathnameBase","normalizePathname","pattern","_compilePath","compilePath","_compilePath2","_slicedToArray","matcher","paramNames","captureGroups","memo","paramName","splatValue","safelyDecodeURIComponent","endsWith","regexpSource","RegExp","undefined","value","decodeURIComponent","error","resolvePath","to","fromPathname","_ref5","toPathname","_ref5$search","search","_ref5$hash","hash","resolvePathname","normalizeSearch","normalizeHash","relativeSegments","pop","join","resolveTo","toArg","routePathnames","locationPathname","from","routePathnameIndex","toSegments","shift","getToPathname","toLowerCase","nextChar","charAt","paths","useHref","useInRouterContext","_useContext","useContext","navigator","_useResolvedPath","useResolvedPath","joinedPathname","endsWithSlash","createHref","useLocation","useNavigationType","navigationType","useMatch","_useLocation","useMemo","useNavigate","_useContext2","_useContext3","_useLocation2","routePathnamesJson","JSON","stringify","activeRef","useRef","useEffect","current","navigate","useCallback","options","go","parse","state","OutletContext","useOutletContext","useOutlet","context","createElement","Provider","useParams","_useContext4","routeMatch","_useContext5","_useLocation3","useRoutes","_useContext6","parentMatches","parentParams","parentPathname","parentPathnameBase","parentRoute","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","element","_renderMatches","reduceRight","MemoryRouter","_ref","initialEntries","initialIndex","historyRef","createMemoryHistory","history","_useState","useState","action","_useState2","setState","useLayoutEffect","listen","Router","Navigate","_ref2","static","Outlet","props","Route","_props","_ref3","_ref3$basename","basenameProp","_ref3$children","locationProp","_ref3$navigationType","Action","Pop","_ref3$static","staticProp","navigationContext","_locationProp","_locationProp$pathnam","_locationProp$search","_locationProp$hash","_locationProp$state","_locationProp$key","trailingPathname","Routes","_ref4","createRoutesFromChildren","Children","isValidElement","type","Fragment","apply","name","renderMatches"],"sources":["F:\\react\\ReactRouter\\packages\\react-router\\lib\\context.ts","F:\\react\\ReactRouter\\packages\\react-router\\lib\\router.ts","F:\\react\\ReactRouter\\packages\\react-router\\lib\\hooks.tsx","F:\\react\\ReactRouter\\packages\\react-router\\lib\\components.tsx"],"sourcesContent":["import * as React from \"react\";\nimport type { History, Location } from \"history\";\nimport { Action as NavigationType } from \"history\";\n\nimport type { RouteMatch } from \"./router\";\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport type Navigator = Pick<History, \"go\" | \"push\" | \"replace\" | \"createHref\">;\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\ninterface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n","import type { Location, Path, To } from \"history\";\nimport { parsePath } from \"history\";\n\nexport function invariant(cond: any, message: string): asserts cond {\n  if (!cond) throw new Error(message);\n}\n\nexport function warning(cond: any, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\nexport function warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n\ntype ParamParseFailed = { failed: true };\n\ntype ParamParseSegment<Segment extends string> =\n  // Check here if there exists a forward slash in the string.\n  Segment extends `${infer LeftSegment}/${infer RightSegment}`\n    ? // If there is a forward slash, then attempt to parse each side of the\n      // forward slash.\n      ParamParseSegment<LeftSegment> extends infer LeftResult\n      ? ParamParseSegment<RightSegment> extends infer RightResult\n        ? LeftResult extends string\n          ? // If the left side is successfully parsed as a param, then check if\n            // the right side can be successfully parsed as well. If both sides\n            // can be parsed, then the result is a union of the two sides\n            // (read: \"foo\" | \"bar\").\n            RightResult extends string\n            ? LeftResult | RightResult\n            : LeftResult\n          : // If the left side is not successfully parsed as a param, then check\n          // if only the right side can be successfully parse as a param. If it\n          // can, then the result is just right, else it's a failure.\n          RightResult extends string\n          ? RightResult\n          : ParamParseFailed\n        : ParamParseFailed\n      : // If the left side didn't parse into a param, then just check the right\n      // side.\n      ParamParseSegment<RightSegment> extends infer RightResult\n      ? RightResult extends string\n        ? RightResult\n        : ParamParseFailed\n      : ParamParseFailed\n    : // If there's no forward slash, then check if this segment starts with a\n    // colon. If it does, then this is a dynamic segment, so the result is\n    // just the remainder of the string. Otherwise, it's a failure.\n    Segment extends `:${infer Remaining}`\n    ? Remaining\n    : ParamParseFailed;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  ParamParseSegment<Segment> extends string\n    ? ParamParseSegment<Segment>\n    : string;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport interface RouteObject {\n  caseSensitive?: boolean;\n  children?: RouteObject[];\n  element?: React.ReactNode;\n  index?: boolean;\n  path?: string;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/docs/en/v6/api#generatepath\n */\nexport function generatePath(path: string, params: Params = {}): string {\n  return path\n    .replace(/:(\\w+)/g, (_, key) => {\n      invariant(params[key] != null, `Missing \":${key}\" param`);\n      return params[key]!;\n    })\n    .replace(/\\/*\\*$/, (_) =>\n      params[\"*\"] == null ? \"\" : params[\"*\"].replace(/^\\/*/, \"/\")\n    );\n}\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface RouteMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObject;\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchroutes\n */\nexport function matchRoutes(\n  routes: RouteObject[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): RouteMatch[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], pathname);\n  }\n\n  return matches;\n}\n\ninterface RouteMeta {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObject;\n}\n\ninterface RouteBranch {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta[];\n}\n\nfunction flattenRoutes(\n  routes: RouteObject[],\n  branches: RouteBranch[] = [],\n  parentsMeta: RouteMeta[] = [],\n  parentPath = \"\"\n): RouteBranch[] {\n  routes.forEach((route, index) => {\n    let meta: RouteMeta = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({ path, score: computeScore(path, route.index), routesMeta });\n  });\n\n  return branches;\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<ParamKey extends string = string>(\n  branch: RouteBranch,\n  pathname: string\n): RouteMatch<ParamKey>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: RouteMatch[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchpath\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else {\n    regexpSource += end\n      ? \"\\\\/*$\" // When matching to the end, ignore trailing slashes\n      : // Otherwise, match a word boundary or a proceeding /. The word boundary restricts\n        // parent routes to matching only their own words and nothing more, e.g. parent\n        // route \"/home\" should not match \"/home2\".\n        // Additionally, allow paths starting with `.`, `-`, `~`, and url-encoded entities,\n        // but do not consume the character in the matched path so they can match against\n        // nested paths.\n        \"(?:(?=[.~-]|%[0-9A-F]{2})|\\\\b|\\\\/|$)\";\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/docs/en/v6/api#resolvepath\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string\n): Path {\n  let to = typeof toArg === \"string\" ? parsePath(toArg) : toArg;\n  let toPathname = toArg === \"\" || to.pathname === \"\" ? \"/\" : to.pathname;\n\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  let from: string;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original to value had one.\n  if (\n    toPathname &&\n    toPathname !== \"/\" &&\n    toPathname.endsWith(\"/\") &&\n    !path.pathname.endsWith(\"/\")\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  let nextChar = pathname.charAt(basename.length);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(basename.length) || \"/\";\n}\n\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\nconst normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\nconst normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n","import * as React from \"react\";\nimport type { Location, Path, To } from \"history\";\nimport { Action as NavigationType, parsePath } from \"history\";\n\nimport { LocationContext, NavigationContext, RouteContext } from \"./context\";\nimport type {\n  ParamParseKey,\n  Params,\n  PathMatch,\n  PathPattern,\n  RouteMatch,\n  RouteObject,\n} from \"./router\";\nimport {\n  getToPathname,\n  invariant,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  resolveTo,\n  warning,\n  warningOnce,\n} from \"./router\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usehref\n */\nexport function useHref(to: To): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to);\n\n  let joinedPathname = pathname;\n  if (basename !== \"/\") {\n    let toPathname = getToPathname(to);\n    let endsWithSlash = toPathname != null && toPathname.endsWith(\"/\");\n    joinedPathname =\n      pathname === \"/\"\n        ? basename + (endsWithSlash ? \"/\" : \"\")\n        : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/api#uselocation\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigationtype\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usematch\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigate\n */\nexport function useNavigate(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    matches.map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(\n        activeRef.current,\n        `You should call navigate() in a React.useEffect(), not when ` +\n          `your component is first rendered.`\n      );\n\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname\n      );\n\n      if (basename !== \"/\") {\n        path.pathname = joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state\n      );\n    },\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/docs/en/v6/api#useoutletcontext\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useoutlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useparams\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath\n */\nexport function useResolvedPath(to: To): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    matches.map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname),\n    [to, routePathnamesJson, locationPathname]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useroutes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element. ` +\n        `This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  return _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([parentPathnameBase, match.pathname]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([parentPathnameBase, match.pathnameBase]),\n        })\n      ),\n    parentMatches\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = []\n): React.ReactElement | null {\n  if (matches == null) return null;\n\n  return matches.reduceRight((outlet, match, index) => {\n    return (\n      <RouteContext.Provider\n        children={\n          match.route.element !== undefined ? match.route.element : outlet\n        }\n        value={{\n          outlet,\n          matches: parentMatches.concat(matches.slice(0, index + 1)),\n        }}\n      />\n    );\n  }, null as React.ReactElement | null);\n}\n","import * as React from \"react\";\nimport type { InitialEntry, Location, MemoryHistory, To } from \"history\";\nimport {\n  Action as NavigationType,\n  createMemoryHistory,\n  parsePath,\n} from \"history\";\n\nimport { LocationContext, NavigationContext, Navigator } from \"./context\";\nimport {\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n} from \"./hooks\";\nimport type { RouteMatch, RouteObject } from \"./router\";\nimport { invariant, normalizePathname, stripBasename, warning } from \"./router\";\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/api#memoryrouter\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({ initialEntries, initialIndex });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/api#navigate\n */\nexport function Navigate({ to, replace, state }: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let navigate = useNavigate();\n  React.useEffect(() => {\n    navigate(to, { replace, state });\n  });\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/api#outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface RouteProps {\n  caseSensitive?: boolean;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  index?: boolean;\n  path?: string;\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: boolean;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  index?: false;\n  path: string;\n}\n\nexport interface LayoutRouteProps {\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n}\n\nexport interface IndexRouteProps {\n  element?: React.ReactNode | null;\n  index: true;\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#route\n */\nexport function Route(\n  _props: PathRouteProps | LayoutRouteProps | IndexRouteProps\n): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/api#router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  let basename = normalizePathname(basenameProp);\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key,\n    };\n  }, [basename, pathname, search, hash, state, key]);\n\n  warning(\n    location != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (location == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider\n        children={children}\n        value={{ location, navigationType }}\n      />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    let route: RouteObject = {\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children);\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}